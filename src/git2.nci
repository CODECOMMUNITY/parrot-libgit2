# THIS FILE IS GENERATED, edit ./bin/header2nci.pl to make changes here
[package]
Git2::Raw

[lib]

libgit2.so

[defs]

i git_attr_foreach pvpvp # git_attr_foreach
i git_attr_add_macro ppp # git_attr_add_macro
i git_attr_get_many ppvpip # git_attr_get_many
v git_attr_cache_flush p # git_attr_cache_flush
v git_attr_value p # git_attr_value
i git_attr_get ppvpp # git_attr_get
i git_blob_create_fromdisk ppp # git_blob_create_fromdisk
i git_blob_create_frombuffer pppi # git_blob_create_frombuffer
i git_blob_create_fromchunks pppvp # git_blob_create_fromchunks
i git_blob_is_binary p # git_blob_is_binary
p git_blob_rawcontent p # git_blob_rawcontent
i git_blob_create_fromworkdir ppp # git_blob_create_fromworkdir
v git_blob_rawsize p # git_blob_rawsize
i git_branch_upstream_name pipp # git_branch_upstream_name
i git_branch_set_upstream pp # git_branch_set_upstream
i git_branch_is_head p # git_branch_is_head
i git_branch_remote_name pipp # git_branch_remote_name
i git_branch_upstream pp # git_branch_upstream
i git_branch_name pp # git_branch_name
i git_branch_delete p # git_branch_delete
i git_branch_foreach pivp # git_branch_foreach
i git_branch_create ppppi # git_branch_create
i git_branch_lookup pppv # git_branch_lookup
i git_branch_move pppi # git_branch_move
i git_checkout_tree ppp # git_checkout_tree
i git_checkout_index ppp # git_checkout_index
i git_checkout_head pp # git_checkout_head
i git_clone pppp # git_clone
p git_commit_committer p # git_commit_committer
i git_commit_create_v ppppppppiv # git_commit_create_v
i git_commit_parent ppi # git_commit_parent
p git_commit_time p # git_commit_time
p git_commit_author p # git_commit_author
p git_commit_message_encoding p # git_commit_message_encoding
p git_commit_tree_id p # git_commit_tree_id
i git_commit_tree pp # git_commit_tree
i git_commit_parentcount p # git_commit_parentcount
i git_commit_create ppppppppip # git_commit_create
i git_commit_time_offset p # git_commit_time_offset
i git_commit_nth_gen_ancestor ppi # git_commit_nth_gen_ancestor
p git_commit_message p # git_commit_message
p git_commit_parent_id pi # git_commit_parent_id
v git_libgit2_version ppp # git_libgit2_version
i git_libgit2_opts iv # git_libgit2_opts
i git_libgit2_capabilities v # git_libgit2_capabilities
i git_config_delete_entry pp # git_config_delete_entry
i git_config_lookup_map_value ppip # git_config_lookup_map_value
v git_config_free p # git_config_free
i git_config_open_default p # git_config_open_default
i git_config_set_bool ppi # git_config_set_bool
i git_config_set_multivar pppp # git_config_set_multivar
i git_config_find_system pi # git_config_find_system
i git_config_open_level ppi # git_config_open_level
i git_config_foreach pvp # git_config_foreach
i git_config_set_int64 ppv # git_config_set_int64
i git_config_get_int32 ppp # git_config_get_int32
i git_config_refresh p # git_config_refresh
i git_config_add_backend ppii # git_config_add_backend
i git_config_find_xdg pi # git_config_find_xdg
i git_config_get_mapped ppppi # git_config_get_mapped
i git_config_set_string ppp # git_config_set_string
i git_config_set_int32 ppv # git_config_set_int32
i git_config_find_global pi # git_config_find_global
i git_config_new p # git_config_new
i git_config_open_ondisk pp # git_config_open_ondisk
i git_config_get_string ppp # git_config_get_string
i git_config_parse_int64 pp # git_config_parse_int64
i git_config_foreach_match ppvp # git_config_foreach_match
i git_config_get_entry ppp # git_config_get_entry
i git_config_add_file_ondisk ppii # git_config_add_file_ondisk
i git_config_parse_bool pp # git_config_parse_bool
i git_config_parse_int32 pp # git_config_parse_int32
i git_config_get_bool ppp # git_config_get_bool
i git_config_get_multivar pppvp # git_config_get_multivar
i git_config_get_int64 ppp # git_config_get_int64
i git_cred_userpass pppip # git_cred_userpass
i git_diff_print_patch pvp # git_diff_print_patch
i git_diff_foreach pvvvp # git_diff_foreach
v git_diff_list_free p # git_diff_list_free
i git_diff_patch_num_hunks p # git_diff_patch_num_hunks
i git_diff_num_deltas_of_type pv # git_diff_num_deltas_of_type
i git_diff_patch_get_line_in_hunk ppppppii # git_diff_patch_get_line_in_hunk
i git_diff_patch_to_str pp # git_diff_patch_to_str
v git_diff_patch_free p # git_diff_patch_free
i git_diff_tree_to_index ppppp # git_diff_tree_to_index
i git_diff_index_to_workdir pppp # git_diff_index_to_workdir
i git_diff_blobs pppvvvp # git_diff_blobs
i git_diff_tree_to_tree ppppp # git_diff_tree_to_tree
i git_diff_blob_to_buffer ppipvvvp # git_diff_blob_to_buffer
i git_diff_get_patch pppi # git_diff_get_patch
p git_diff_status_char v # git_diff_status_char
i git_diff_patch_get_hunk pppppi # git_diff_patch_get_hunk
i git_diff_patch_line_stats pppp # git_diff_patch_line_stats
i git_diff_num_deltas p # git_diff_num_deltas
p git_diff_patch_delta p # git_diff_patch_delta
i git_diff_tree_to_workdir pppp # git_diff_tree_to_workdir
i git_diff_find_similar pp # git_diff_find_similar
i git_diff_patch_num_lines_in_hunk pi # git_diff_patch_num_lines_in_hunk
i git_diff_patch_print pvp # git_diff_patch_print
i git_diff_print_compact pvp # git_diff_print_compact
i git_diff_merge pp # git_diff_merge
v giterr_set_oom v # giterr_set_oom
v giterr_set_str ip # giterr_set_str
p giterr_last v # giterr_last
v giterr_clear v # giterr_clear
i git_graph_ahead_behind ppppp # git_graph_ahead_behind
i git_ignore_add_rule pp # git_ignore_add_rule
i git_ignore_path_is_ignored ppp # git_ignore_path_is_ignored
i git_ignore_clear_internal_rules p # git_ignore_clear_internal_rules
i git_index_entrycount p # git_index_entrycount
i git_index_remove ppi # git_index_remove
i git_index_write p # git_index_write
p git_index_owner p # git_index_owner
i git_index_write_tree pp # git_index_write_tree
i git_index_caps p # git_index_caps
i git_index_remove_directory ppi # git_index_remove_directory
v git_index_reuc_clear p # git_index_reuc_clear
i git_index_set_caps pi # git_index_set_caps
i git_index_has_conflicts p # git_index_has_conflicts
i git_index_add pp # git_index_add
i git_index_reuc_entrycount p # git_index_reuc_entrycount
i git_index_add_bypath pp # git_index_add_bypath
i git_index_remove_bypath pp # git_index_remove_bypath
i git_index_entry_stage p # git_index_entry_stage
i git_index_conflict_remove pp # git_index_conflict_remove
i git_index_reuc_add ppipipip # git_index_reuc_add
i git_index_open pp # git_index_open
i git_index_write_tree_to ppp # git_index_write_tree_to
p git_index_get_bypath ppi # git_index_get_bypath
i git_index_reuc_find ppp # git_index_reuc_find
p git_index_reuc_get_byindex pi # git_index_reuc_get_byindex
i git_index_new p # git_index_new
v git_index_free p # git_index_free
i git_index_conflict_get ppppp # git_index_conflict_get
i git_index_conflict_add pppp # git_index_conflict_add
v git_index_clear p # git_index_clear
i git_index_reuc_remove pi # git_index_reuc_remove
p git_index_reuc_get_bypath pp # git_index_reuc_get_bypath
i git_index_find ppp # git_index_find
i git_index_read_tree pp # git_index_read_tree
i git_index_read p # git_index_read
v git_index_conflict_cleanup p # git_index_conflict_cleanup
p git_index_get_byindex pi # git_index_get_byindex
i git_indexer_stream_new ppvp # git_indexer_stream_new
i git_indexer_stream_add ppip # git_indexer_stream_add
v git_indexer_stream_free p # git_indexer_stream_free
p git_indexer_stream_hash p # git_indexer_stream_hash
i git_indexer_stream_finalize pp # git_indexer_stream_finalize
i git_merge_base_many pppi # git_merge_base_many
i git_merge_base pppp # git_merge_base
i git_message_prettify pipi # git_message_prettify
i git_note_foreach ppvp # git_note_foreach
i git_note_remove ppppp # git_note_remove
i git_note_default_ref pp # git_note_default_ref
i git_note_create pppppppi # git_note_create
i git_note_read pppp # git_note_read
v git_note_iterator_free p # git_note_iterator_free
v git_note_free p # git_note_free
i git_note_next ppp # git_note_next
i git_note_iterator_new ppp # git_note_iterator_new
p git_note_message p # git_note_message
p git_note_oid p # git_note_oid
i git_object_lookup_prefix pppip # git_object_lookup_prefix
i git_object__size p # git_object__size
p git_object_id p # git_object_id
i git_object_typeisloose p # git_object_typeisloose
p git_object_string2type p # git_object_string2type
p git_object_owner p # git_object_owner
p git_object_type2string p # git_object_type2string
i git_object_peel ppp # git_object_peel
i git_object_dup pp # git_object_dup
p git_object_type p # git_object_type
v git_object_free p # git_object_free
i git_object_lookup pppp # git_object_lookup
i git_odb_new p # git_odb_new
i git_odb_object_size p # git_odb_object_size
i git_odb_open_rstream ppp # git_odb_open_rstream
i git_odb_exists pp # git_odb_exists
i git_odb_open pp # git_odb_open
p git_odb_object_id p # git_odb_object_id
i git_odb_read_prefix pppi # git_odb_read_prefix
i git_odb_write pppip # git_odb_write
i git_odb_add_backend ppi # git_odb_add_backend
i git_odb_add_alternate ppi # git_odb_add_alternate
i git_odb_add_disk_alternate pp # git_odb_add_disk_alternate
i git_odb_open_wstream ppip # git_odb_open_wstream
p git_odb_object_data p # git_odb_object_data
i git_odb_hash ppip # git_odb_hash
i git_odb_read_header pppp # git_odb_read_header
i git_odb_write_pack ppvp # git_odb_write_pack
i git_odb_read ppp # git_odb_read
i git_odb_foreach pvp # git_odb_foreach
i git_odb_hashfile ppp # git_odb_hashfile
v git_odb_object_free p # git_odb_object_free
v git_odb_free p # git_odb_free
i git_odb_refresh v # git_odb_refresh
p git_odb_object_type p # git_odb_object_type
p git_odb_backend_malloc pi # git_odb_backend_malloc
i git_odb_backend_pack pppiip # git_odb_backend_pack
v git_oid_cpy pp # git_oid_cpy
p git_oid_tostr pip # git_oid_tostr
i git_oid_fromstrp pp # git_oid_fromstrp
v git_oid_shorten_free p # git_oid_shorten_free
i git_oid_iszero p # git_oid_iszero
v git_oid_pathfmt pp # git_oid_pathfmt
i git_oid_shorten_add pp # git_oid_shorten_add
p git_oid_allocfmt p # git_oid_allocfmt
v git_oid_fromraw pp # git_oid_fromraw
i git_oid_ncmp ppi # git_oid_ncmp
p git_oid_shorten_new i # git_oid_shorten_new
i git_oid_streq pp # git_oid_streq
i git_oid_fromstr pp # git_oid_fromstr
i git_oid_fromstrn ppi # git_oid_fromstrn
v git_oid_fmt pp # git_oid_fmt
i git_packbuilder_set_threads pi # git_packbuilder_set_threads
v git_packbuilder_free p # git_packbuilder_free
i git_packbuilder_foreach pvp # git_packbuilder_foreach
i git_packbuilder_new pp # git_packbuilder_new
i git_packbuilder_insert ppp # git_packbuilder_insert
i git_packbuilder_insert_tree pp # git_packbuilder_insert_tree
v git_packbuilder_written p # git_packbuilder_written
v git_packbuilder_object_count p # git_packbuilder_object_count
i git_packbuilder_write pp # git_packbuilder_write
i git_push_update_tips p # git_push_update_tips
i git_push_unpack_ok p # git_push_unpack_ok
i git_push_new pp # git_push_new
i git_push_set_options pp # git_push_set_options
i git_push_add_refspec pp # git_push_add_refspec
v git_push_free p # git_push_free
i git_push_status_foreach pippp # git_push_status_foreach
i git_push_finish p # git_push_finish
i git_refdb_set_backend pp # git_refdb_set_backend
p git_reference__alloc pppp # git_reference__alloc
i git_refdb_compress p # git_refdb_compress
i git_refdb_open pp # git_refdb_open
i git_refdb_new pp # git_refdb_new
v git_refdb_free p # git_refdb_free
i git_refdb_backend_fs vpp # git_refdb_backend_fs
i git_reflog_delete p # git_reflog_delete
i git_reflog_read pp # git_reflog_read
p git_reflog_entry_committer p # git_reflog_entry_committer
i git_reflog_drop pii # git_reflog_drop
i git_reflog_rename pp # git_reflog_rename
v git_reflog_free p # git_reflog_free
p git_reflog_entry_id_new p # git_reflog_entry_id_new
i git_reflog_append pppp # git_reflog_append
p git_reflog_entry_byindex pi # git_reflog_entry_byindex
i git_reflog_entrycount p # git_reflog_entrycount
i git_reflog_write p # git_reflog_write
p git_reflog_entry_id_old p # git_reflog_entry_id_old
p git_reflog_entry_message p # git_reflog_entry_message
i git_reference_is_remote p # git_reference_is_remote
i git_reference_create ppppi # git_reference_create
i git_reference_cmp pp # git_reference_cmp
i git_reference_has_log p # git_reference_has_log
i git_reference_foreach pivp # git_reference_foreach
i git_reference_is_branch p # git_reference_is_branch
i git_reference_delete p # git_reference_delete
i git_reference_is_valid_name p # git_reference_is_valid_name
i git_reference_list ppi # git_reference_list
p git_reference_name p # git_reference_name
i git_reference_lookup ppp # git_reference_lookup
v git_reference_free p # git_reference_free
i git_reference_symbolic_create ppppi # git_reference_symbolic_create
i git_reference_name_to_id ppp # git_reference_name_to_id
i git_reference_resolve pp # git_reference_resolve
i git_reference_peel ppp # git_reference_peel
i git_reference_foreach_glob ppivp # git_reference_foreach_glob
v git_reference_type p # git_reference_type
p git_reference_symbolic_target p # git_reference_symbolic_target
i git_reference_set_target ppp # git_reference_set_target
p git_reference_target p # git_reference_target
i git_reference_rename pppi # git_reference_rename
p git_reference_owner p # git_reference_owner
i git_reference_symbolic_set_target ppp # git_reference_symbolic_set_target
i git_reference_normalize_name pipi # git_reference_normalize_name
i git_refspec_dst_matches pp # git_refspec_dst_matches
i git_refspec_src_matches pp # git_refspec_src_matches
p git_refspec_dst p # git_refspec_dst
i git_refspec_transform pipp # git_refspec_transform
p git_refspec_src p # git_refspec_src
i git_refspec_rtransform pipp # git_refspec_rtransform
i git_refspec_force p # git_refspec_force
p git_remote_fetchspec p # git_remote_fetchspec
v git_remote_set_cred_acquire_cb pvp # git_remote_set_cred_acquire_cb
v git_remote_set_update_fetchhead pi # git_remote_set_update_fetchhead
i git_remote_set_transport pp # git_remote_set_transport
i git_remote_update_tips p # git_remote_update_tips
i git_remote_set_pushspec pp # git_remote_set_pushspec
i git_remote_set_pushurl pp # git_remote_set_pushurl
i git_remote_is_valid_name p # git_remote_is_valid_name
p git_remote_stats p # git_remote_stats
v git_remote_disconnect p # git_remote_disconnect
i git_remote_create pppp # git_remote_create
i git_remote_set_url pp # git_remote_set_url
v git_remote_autotag p # git_remote_autotag
i git_remote_create_inmemory pppp # git_remote_create_inmemory
i git_remote_ls pvp # git_remote_ls
i git_remote_load ppp # git_remote_load
v git_remote_check_cert pi # git_remote_check_cert
p git_remote_name p # git_remote_name
v git_remote_free p # git_remote_free
i git_remote_set_fetchspec pp # git_remote_set_fetchspec
i git_remote_connect pv # git_remote_connect
i git_remote_connected p # git_remote_connected
p git_remote_pushurl p # git_remote_pushurl
i git_remote_download pvp # git_remote_download
v git_remote_stop p # git_remote_stop
i git_remote_supported_url p # git_remote_supported_url
i git_remote_list pp # git_remote_list
p git_remote_pushspec p # git_remote_pushspec
p git_remote_url p # git_remote_url
i git_remote_save p # git_remote_save
i git_remote_set_callbacks pp # git_remote_set_callbacks
v git_remote_set_autotag pv # git_remote_set_autotag
i git_remote_valid_url p # git_remote_valid_url
i git_remote_update_fetchhead p # git_remote_update_fetchhead
i git_remote_rename ppvp # git_remote_rename
v git_repository_set_config pp # git_repository_set_config
i git_repository_refdb pp # git_repository_refdb
i git_repository_discover pipip # git_repository_discover
i git_repository_init_ext ppp # git_repository_init_ext
i git_repository_mergehead_foreach pvp # git_repository_mergehead_foreach
i git_repository_head_detached p # git_repository_head_detached
i git_repository_set_workdir ppi # git_repository_set_workdir
i git_repository_head_orphan p # git_repository_head_orphan
p git_repository_path p # git_repository_path
v git_repository_free p # git_repository_free
i git_repository_head pp # git_repository_head
p git_repository_workdir p # git_repository_workdir
i git_repository_config pp # git_repository_config
i git_repository_message pip # git_repository_message
i git_repository_merge_cleanup p # git_repository_merge_cleanup
i git_repository_hashfile ppppp # git_repository_hashfile
i git_repository_detach_head p # git_repository_detach_head
i git_repository_fetchhead_foreach pvp # git_repository_fetchhead_foreach
i git_repository_set_head pp # git_repository_set_head
i git_repository_set_head_detached pp # git_repository_set_head_detached
i git_repository_open_ext ppip # git_repository_open_ext
i git_repository_wrap_odb pp # git_repository_wrap_odb
v git_repository_set_refdb pp # git_repository_set_refdb
i git_repository_index pp # git_repository_index
i git_repository_odb pp # git_repository_odb
i git_repository_is_empty p # git_repository_is_empty
v git_repository_set_odb pp # git_repository_set_odb
i git_repository_is_bare p # git_repository_is_bare
v git_repository_set_index pp # git_repository_set_index
i git_repository_open pp # git_repository_open
i git_repository_init ppv # git_repository_init
i git_repository_message_remove p # git_repository_message_remove
i git_repository_state p # git_repository_state
i git_reset_default ppp # git_reset_default
i git_reset ppv # git_reset
i git_revparse ppp # git_revparse
i git_revparse_single ppp # git_revparse_single
i git_revwalk_push_range pp # git_revwalk_push_range
p git_revwalk_repository p # git_revwalk_repository
v git_revwalk_sorting pi # git_revwalk_sorting
i git_revwalk_next pp # git_revwalk_next
i git_revwalk_push_ref pp # git_revwalk_push_ref
i git_revwalk_hide_ref pp # git_revwalk_hide_ref
i git_revwalk_push pp # git_revwalk_push
i git_revwalk_hide pp # git_revwalk_hide
i git_revwalk_push_head p # git_revwalk_push_head
i git_revwalk_hide_head p # git_revwalk_hide_head
i git_revwalk_hide_glob pp # git_revwalk_hide_glob
v git_revwalk_free p # git_revwalk_free
i git_revwalk_push_glob pp # git_revwalk_push_glob
i git_revwalk_new pp # git_revwalk_new
v git_revwalk_reset p # git_revwalk_reset
v git_signature_free p # git_signature_free
i git_signature_now ppp # git_signature_now
p git_signature_dup p # git_signature_dup
i git_signature_new ppppi # git_signature_new
i git_stash_foreach pvp # git_stash_foreach
i git_stash_drop pi # git_stash_drop
i git_stash_save ppppi # git_stash_save
i git_status_foreach_ext ppvp # git_status_foreach_ext
i git_status_foreach pvp # git_status_foreach
i git_status_should_ignore ppp # git_status_should_ignore
i git_status_file ppp # git_status_file
i git_strarray_copy pp # git_strarray_copy
v git_strarray_free p # git_strarray_free
i git_submodule_foreach pippp # git_submodule_foreach
i git_submodule_fetch_recurse_submodules p # git_submodule_fetch_recurse_submodules
i git_submodule_open pp # git_submodule_open
p git_submodule_owner p # git_submodule_owner
v git_submodule_ignore p # git_submodule_ignore
i git_submodule_reload p # git_submodule_reload
p git_submodule_url p # git_submodule_url
i git_submodule_reload_all p # git_submodule_reload_all
v git_submodule_set_ignore pv # git_submodule_set_ignore
p git_submodule_head_id p # git_submodule_head_id
i git_submodule_set_fetch_recurse_submodules pi # git_submodule_set_fetch_recurse_submodules
i git_submodule_add_finalize p # git_submodule_add_finalize
i git_submodule_sync p # git_submodule_sync
v git_submodule_set_update pv # git_submodule_set_update
i git_submodule_location pp # git_submodule_location
v git_submodule_update p # git_submodule_update
i git_submodule_init pi # git_submodule_init
i git_submodule_lookup ppp # git_submodule_lookup
i git_submodule_add_setup ppppi # git_submodule_add_setup
p git_submodule_name p # git_submodule_name
p git_submodule_path p # git_submodule_path
i git_submodule_status pp # git_submodule_status
i git_submodule_save p # git_submodule_save
p git_submodule_wd_id p # git_submodule_wd_id
i git_submodule_add_to_index pi # git_submodule_add_to_index
i git_submodule_set_url pp # git_submodule_set_url
p git_submodule_index_id p # git_submodule_index_id
i git_tag_list pp # git_tag_list
i git_tag_peel pp # git_tag_peel
i git_tag_create_frombuffer pppi # git_tag_create_frombuffer
i git_tag_target pp # git_tag_target
p git_tag_name p # git_tag_name
i git_tag_list_match ppp # git_tag_list_match
p git_tag_target_id p # git_tag_target_id
p git_tag_tagger p # git_tag_tagger
p git_tag_target_type p # git_tag_target_type
p git_tag_message p # git_tag_message
i git_tag_delete pp # git_tag_delete
i git_tag_create ppppppi # git_tag_create
i git_tag_create_lightweight ppppi # git_tag_create_lightweight
p git_tag_id p # git_tag_id
i git_tag_foreach pvp # git_tag_foreach
v git_threads_shutdown v # git_threads_shutdown
i git_threads_init v # git_threads_init
i git_trace_set vv # git_trace_set
i git_transport_local ppp # git_transport_local
i git_transport_smart ppp # git_transport_smart
i git_smart_subtransport_http pp # git_smart_subtransport_http
i git_smart_subtransport_git pp # git_smart_subtransport_git
i git_transport_dummy ppp # git_transport_dummy
i git_transport_new ppp # git_transport_new
i git_cred_userpass_plaintext_new ppp # git_cred_userpass_plaintext_new
i git_tree_entry_to_object ppp # git_tree_entry_to_object
p git_tree_entry_id p # git_tree_entry_id
v git_tree_entry_free p # git_tree_entry_free
i git_tree_entry_cmp pp # git_tree_entry_cmp
v git_treebuilder_filter pvp # git_treebuilder_filter
p git_tree_entry_type p # git_tree_entry_type
i git_treebuilder_entrycount p # git_treebuilder_entrycount
p git_tree_entry_byindex pi # git_tree_entry_byindex
p git_tree_entry_byname pp # git_tree_entry_byname
p git_treebuilder_get pp # git_treebuilder_get
i git_treebuilder_remove pp # git_treebuilder_remove
p git_tree_entry_byoid pp # git_tree_entry_byoid
p git_tree_owner p # git_tree_owner
v git_tree_entry_filemode p # git_tree_entry_filemode
i git_treebuilder_create pp # git_treebuilder_create
i git_tree_entry_bypath ppp # git_tree_entry_bypath
i git_tree_walk pvvp # git_tree_walk
i git_tree_entrycount p # git_tree_entrycount
p git_tree_entry_dup p # git_tree_entry_dup
v git_treebuilder_free p # git_treebuilder_free
p git_tree_id p # git_tree_id
p git_tree_entry_name p # git_tree_entry_name
i git_treebuilder_write ppp # git_treebuilder_write
v git_treebuilder_clear p # git_treebuilder_clear
i git_treebuilder_insert ppppv # git_treebuilder_insert
