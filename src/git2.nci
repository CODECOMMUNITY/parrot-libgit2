# THIS FILE IS GENERATED, edit ./bin/header2nci.pl to make changes here
[package]
Git2::Raw

[lib]

libgit2.so

[defs]

i git_attr_add_macro pvv # git_attr_add_macro
v git_attr_value v # git_attr_value
i git_attr_get_many vpvpvv # git_attr_get_many
i git_attr_foreach pvpvv # git_attr_foreach
i git_attr_get vpvpv # git_attr_get
v git_attr_cache_flush p # git_attr_cache_flush
v git_blob_rawsize v # git_blob_rawsize
i git_blob_create_fromchunks vpvvv # git_blob_create_fromchunks
i git_blob_create_fromworkdir p # git_blob_create_fromworkdir
i git_blob_create_frombuffer p # git_blob_create_frombuffer
p git_blob_rawcontent v # git_blob_rawcontent
i git_blob_is_binary p # git_blob_is_binary
i git_blob_create_fromdisk p # git_blob_create_fromdisk
i git_branch_move vvvv # git_branch_move
i git_branch_upstream_name vvpv # git_branch_upstream_name
i git_branch_is_head v # git_branch_is_head
i git_branch_name vv # git_branch_name
i git_branch_delete p # git_branch_delete
i git_branch_create vpvvv # git_branch_create
i git_branch_foreach pvvv # git_branch_foreach
i git_branch_set_upstream p # git_branch_set_upstream
i git_branch_lookup vpvv # git_branch_lookup
i git_branch_remote_name vvpv # git_branch_remote_name
i git_branch_upstream vv # git_branch_upstream
i git_checkout_head pv # git_checkout_head
i git_checkout_index pvv # git_checkout_index
i git_checkout_tree pvv # git_checkout_tree
i git_clone vvvv # git_clone
i git_commit_parent p # git_commit_parent
p git_commit_author v # git_commit_author
p git_commit_message v # git_commit_message
p git_commit_committer v # git_commit_committer
i git_commit_create vpvvvvvvvv # git_commit_create
i git_commit_time_offset v # git_commit_time_offset
i git_commit_nth_gen_ancestor vvv # git_commit_nth_gen_ancestor
p git_commit_parent_id p # git_commit_parent_id
p git_commit_message_encoding v # git_commit_message_encoding
p git_commit_time v # git_commit_time
i git_commit_parentcount v # git_commit_parentcount
i git_commit_create_v vpvvvvvvvv # git_commit_create_v
i git_commit_tree p # git_commit_tree
p git_commit_tree_id v # git_commit_tree_id
i git_libgit2_opts i # git_libgit2_opts
v git_libgit2_version i # git_libgit2_version
i git_libgit2_capabilities v # git_libgit2_capabilities
i git_config_open_default p # git_config_open_default
i git_config_lookup_map_value vvvv # git_config_lookup_map_value
i git_config_get_int64 v # git_config_get_int64
i git_config_foreach vvv # git_config_foreach
i git_config_get_bool i # git_config_get_bool
i git_config_open_level vvv # git_config_open_level
i git_config_set_int32 p # git_config_set_int32
i git_config_parse_int64 v # git_config_parse_int64
i git_config_set_string p # git_config_set_string
i git_config_parse_int32 v # git_config_parse_int32
i git_config_set_bool p # git_config_set_bool
v git_config_free p # git_config_free
i git_config_parse_bool i # git_config_parse_bool
i git_config_set_int64 p # git_config_set_int64
i git_config_get_int32 v # git_config_get_int32
i git_config_find_system p # git_config_find_system
i git_config_refresh p # git_config_refresh
i git_config_add_backend vvvv # git_config_add_backend
i git_config_get_mapped vvvvv # git_config_get_mapped
i git_config_new p # git_config_new
i git_config_get_entry vvv # git_config_get_entry
i git_config_foreach_match vvvv # git_config_foreach_match
i git_config_get_string v # git_config_get_string
i git_config_delete_entry p # git_config_delete_entry
i git_config_open_ondisk p # git_config_open_ondisk
i git_config_find_global p # git_config_find_global
i git_config_set_multivar p # git_config_set_multivar
i git_config_find_xdg p # git_config_find_xdg
i git_config_add_file_ondisk vpvv # git_config_add_file_ondisk
i git_config_get_multivar v # git_config_get_multivar
i git_cred_userpass vvvvv # git_cred_userpass
v git_diff_list_free v # git_diff_list_free
i git_diff_index_to_workdir vpvv # git_diff_index_to_workdir
i git_diff_find_similar vv # git_diff_find_similar
p git_diff_status_char v # git_diff_status_char
i git_diff_print_patch vvv # git_diff_print_patch
i git_diff_patch_print vvv # git_diff_patch_print
i git_diff_print_compact vvv # git_diff_print_compact
i git_diff_patch_num_hunks v # git_diff_patch_num_hunks
i git_diff_tree_to_index vpvvv # git_diff_tree_to_index
i git_diff_blobs vvvvvvv # git_diff_blobs
v git_diff_patch_free v # git_diff_patch_free
i git_diff_get_patch vvvv # git_diff_get_patch
i git_diff_patch_num_lines_in_hunk vv # git_diff_patch_num_lines_in_hunk
i git_diff_foreach vvvvv # git_diff_foreach
i git_diff_patch_to_str vv # git_diff_patch_to_str
i git_diff_patch_line_stats vvvv # git_diff_patch_line_stats
i git_diff_tree_to_tree vpvvv # git_diff_tree_to_tree
i git_diff_num_deltas_of_type vv # git_diff_num_deltas_of_type
i git_diff_patch_get_line_in_hunk vvvvvvvv # git_diff_patch_get_line_in_hunk
i git_diff_blob_to_buffer vvvvvvvv # git_diff_blob_to_buffer
i git_diff_merge vv # git_diff_merge
v git_diff_patch_delta v # git_diff_patch_delta
i git_diff_patch_get_hunk vvvvvv # git_diff_patch_get_hunk
i git_diff_tree_to_workdir vpvv # git_diff_tree_to_workdir
i git_diff_num_deltas v # git_diff_num_deltas
v giterr_last v # giterr_last
v giterr_set_oom v # giterr_set_oom
v giterr_set_str i # giterr_set_str
v giterr_clear v # giterr_clear
i git_graph_ahead_behind i # git_graph_ahead_behind
i git_ignore_path_is_ignored vpp # git_ignore_path_is_ignored
i git_ignore_add_rule pv # git_ignore_add_rule
i git_ignore_clear_internal_rules p # git_ignore_clear_internal_rules
i git_index_write p # git_index_write
i git_index_reuc_add pvvvvvv # git_index_reuc_add
i git_index_read_tree p # git_index_read_tree
i git_index_reuc_remove p # git_index_reuc_remove
i git_index_write_tree p # git_index_write_tree
v git_index_reuc_get_bypath p # git_index_reuc_get_bypath
i git_index_entry_stage v # git_index_entry_stage
i git_index_entrycount v # git_index_entrycount
i git_index_remove_directory vvv # git_index_remove_directory
i git_index_reuc_entrycount p # git_index_reuc_entrycount
i git_index_read p # git_index_read
v git_index_get_byindex vv # git_index_get_byindex
v git_index_conflict_cleanup p # git_index_conflict_cleanup
i git_index_reuc_find i # git_index_reuc_find
p git_index_owner v # git_index_owner
i git_index_add p # git_index_add
v git_index_free p # git_index_free
i git_index_conflict_remove p # git_index_conflict_remove
v git_index_get_bypath vpv # git_index_get_bypath
i git_index_remove p # git_index_remove
i git_index_find i # git_index_find
i git_index_remove_bypath p # git_index_remove_bypath
i git_index_add_bypath p # git_index_add_bypath
i git_index_new p # git_index_new
i git_index_conflict_add vvvv # git_index_conflict_add
i git_index_open p # git_index_open
v git_index_clear p # git_index_clear
i git_index_write_tree_to p # git_index_write_tree_to
i git_index_caps v # git_index_caps
i git_index_conflict_get v # git_index_conflict_get
i git_index_has_conflicts v # git_index_has_conflicts
v git_index_reuc_get_byindex p # git_index_reuc_get_byindex
v git_index_reuc_clear p # git_index_reuc_clear
i git_index_set_caps p # git_index_set_caps
i git_indexer_stream_new vpvv # git_indexer_stream_new
v git_indexer_stream_free v # git_indexer_stream_free
i git_indexer_stream_finalize v # git_indexer_stream_finalize
p git_indexer_stream_hash v # git_indexer_stream_hash
i git_indexer_stream_add v # git_indexer_stream_add
i git_merge_base vpvv # git_merge_base
i git_merge_base_many vpvv # git_merge_base_many
i git_message_prettify vvvv # git_message_prettify
i git_note_default_ref v # git_note_default_ref
p git_note_message v # git_note_message
i git_note_foreach pvvv # git_note_foreach
p git_note_oid v # git_note_oid
i git_note_next vvv # git_note_next
i git_note_create vpvvvvvv # git_note_create
i git_note_iterator_new vpv # git_note_iterator_new
i git_note_remove pvvvv # git_note_remove
v git_note_iterator_free v # git_note_iterator_free
v git_note_free v # git_note_free
i git_note_read vpvv # git_note_read
v git_object_free p # git_object_free
p git_object_type2string p # git_object_type2string
i git_object_typeisloose p # git_object_typeisloose
i git_object_dup p # git_object_dup
i git_object_lookup vpvv # git_object_lookup
p git_object_id v # git_object_id
i git_object__size p # git_object__size
i git_object_peel vvv # git_object_peel
p git_object_string2type v # git_object_string2type
p git_object_owner v # git_object_owner
i git_object_lookup_prefix vpvvv # git_object_lookup_prefix
p git_object_type v # git_object_type
i git_odb_refresh v # git_odb_refresh
i git_odb_write_pack vvvv # git_odb_write_pack
i git_odb_object_size p # git_odb_object_size
p git_odb_object_id p # git_odb_object_id
i git_odb_read_prefix p # git_odb_read_prefix
i git_odb_exists p # git_odb_exists
i git_odb_open_wstream p # git_odb_open_wstream
i git_odb_hash p # git_odb_hash
i git_odb_open p # git_odb_open
i git_odb_add_disk_alternate p # git_odb_add_disk_alternate
p git_odb_object_type p # git_odb_object_type
i git_odb_foreach p # git_odb_foreach
i git_odb_open_rstream p # git_odb_open_rstream
i git_odb_new p # git_odb_new
i git_odb_add_alternate p # git_odb_add_alternate
p git_odb_object_data p # git_odb_object_data
i git_odb_hashfile p # git_odb_hashfile
i git_odb_add_backend p # git_odb_add_backend
i git_odb_write p # git_odb_write
i git_odb_read p # git_odb_read
i git_odb_read_header i # git_odb_read_header
v git_odb_free p # git_odb_free
v git_odb_object_free p # git_odb_object_free
i git_odb_backend_pack pvvvvv # git_odb_backend_pack
v git_odb_backend_malloc p # git_odb_backend_malloc
i git_oid_fromstr p # git_oid_fromstr
i git_oid_shorten_add v # git_oid_shorten_add
v git_oid_pathfmt p # git_oid_pathfmt
i git_oid_iszero v # git_oid_iszero
p git_oid_allocfmt v # git_oid_allocfmt
i git_oid_ncmp v # git_oid_ncmp
v git_oid_fromraw p # git_oid_fromraw
v git_oid_shorten_new i # git_oid_shorten_new
p git_oid_tostr p # git_oid_tostr
v git_oid_fmt p # git_oid_fmt
i git_oid_fromstrp p # git_oid_fromstrp
i git_oid_streq v # git_oid_streq
v git_oid_cpy p # git_oid_cpy
v git_oid_shorten_free v # git_oid_shorten_free
i git_oid_fromstrn p # git_oid_fromstrn
i git_packbuilder_insert_tree v # git_packbuilder_insert_tree
i git_packbuilder_new v # git_packbuilder_new
v git_packbuilder_written v # git_packbuilder_written
v git_packbuilder_object_count v # git_packbuilder_object_count
i git_packbuilder_foreach v # git_packbuilder_foreach
i git_packbuilder_insert v # git_packbuilder_insert
i git_packbuilder_set_threads v # git_packbuilder_set_threads
v git_packbuilder_free v # git_packbuilder_free
i git_packbuilder_write v # git_packbuilder_write
i git_push_update_tips v # git_push_update_tips
v git_push_free v # git_push_free
i git_push_finish v # git_push_finish
i git_push_add_refspec v # git_push_add_refspec
i git_push_status_foreach vvvvv # git_push_status_foreach
i git_push_set_options vv # git_push_set_options
i git_push_new v # git_push_new
i git_push_unpack_ok v # git_push_unpack_ok
i git_refdb_set_backend vv # git_refdb_set_backend
i git_refdb_open v # git_refdb_open
v git_reference__alloc vvvv # git_reference__alloc
v git_refdb_free v # git_refdb_free
i git_refdb_compress v # git_refdb_compress
i git_refdb_new v # git_refdb_new
i git_refdb_backend_fs vpv # git_refdb_backend_fs
p git_reflog_entry_message v # git_reflog_entry_message
p git_reflog_entry_committer v # git_reflog_entry_committer
v git_reflog_entry_byindex p # git_reflog_entry_byindex
i git_reflog_drop vvv # git_reflog_drop
i git_reflog_delete p # git_reflog_delete
p git_reflog_entry_id_old v # git_reflog_entry_id_old
i git_reflog_append p # git_reflog_append
i git_reflog_write p # git_reflog_write
i git_reflog_rename p # git_reflog_rename
p git_reflog_entry_id_new v # git_reflog_entry_id_new
i git_reflog_read p # git_reflog_read
i git_reflog_entrycount p # git_reflog_entrycount
v git_reflog_free p # git_reflog_free
v git_reference_free p # git_reference_free
p git_reference_target v # git_reference_target
i git_reference_is_branch p # git_reference_is_branch
i git_reference_foreach_glob pvvvv # git_reference_foreach_glob
i git_reference_is_remote p # git_reference_is_remote
i git_reference_has_log p # git_reference_has_log
i git_reference_list p # git_reference_list
i git_reference_normalize_name vvvv # git_reference_normalize_name
v git_reference_type v # git_reference_type
i git_reference_foreach pvvv # git_reference_foreach
i git_reference_symbolic_set_target vvv # git_reference_symbolic_set_target
i git_reference_peel vvv # git_reference_peel
i git_reference_create p # git_reference_create
i git_reference_is_valid_name v # git_reference_is_valid_name
i git_reference_symbolic_create p # git_reference_symbolic_create
i git_reference_rename vvvv # git_reference_rename
i git_reference_delete p # git_reference_delete
p git_reference_name v # git_reference_name
i git_reference_name_to_id vpv # git_reference_name_to_id
i git_reference_cmp p # git_reference_cmp
i git_reference_lookup p # git_reference_lookup
p git_reference_owner v # git_reference_owner
i git_reference_set_target vvv # git_reference_set_target
i git_reference_resolve p # git_reference_resolve
p git_reference_symbolic_target v # git_reference_symbolic_target
i git_refspec_rtransform p # git_refspec_rtransform
i git_refspec_force v # git_refspec_force
i git_refspec_dst_matches v # git_refspec_dst_matches
i git_refspec_transform p # git_refspec_transform
p git_refspec_dst v # git_refspec_dst
i git_refspec_src_matches v # git_refspec_src_matches
p git_refspec_src v # git_refspec_src
i git_remote_update_tips v # git_remote_update_tips
i git_remote_connected v # git_remote_connected
v git_remote_pushspec v # git_remote_pushspec
p git_remote_pushurl v # git_remote_pushurl
v git_remote_set_cred_acquire_cb vvv # git_remote_set_cred_acquire_cb
v git_remote_check_cert v # git_remote_check_cert
i git_remote_set_callbacks v # git_remote_set_callbacks
i git_remote_list p # git_remote_list
i git_remote_set_pushspec v # git_remote_set_pushspec
i git_remote_connect v # git_remote_connect
i git_remote_set_url v # git_remote_set_url
i git_remote_set_pushurl v # git_remote_set_pushurl
p git_remote_name v # git_remote_name
i git_remote_download vvv # git_remote_download
p git_remote_url v # git_remote_url
i git_remote_rename vvvv # git_remote_rename
i git_remote_ls v # git_remote_ls
v git_remote_stats v # git_remote_stats
v git_remote_stop v # git_remote_stop
v git_remote_free v # git_remote_free
i git_remote_save v # git_remote_save
i git_remote_valid_url v # git_remote_valid_url
v git_remote_autotag v # git_remote_autotag
v git_remote_set_autotag vv # git_remote_set_autotag
v git_remote_set_update_fetchhead v # git_remote_set_update_fetchhead
i git_remote_create_inmemory vpvv # git_remote_create_inmemory
i git_remote_create vpvv # git_remote_create
i git_remote_set_fetchspec v # git_remote_set_fetchspec
i git_remote_load v # git_remote_load
i git_remote_is_valid_name v # git_remote_is_valid_name
i git_remote_set_transport vv # git_remote_set_transport
i git_remote_supported_url v # git_remote_supported_url
v git_remote_fetchspec v # git_remote_fetchspec
i git_remote_update_fetchhead v # git_remote_update_fetchhead
v git_remote_disconnect v # git_remote_disconnect
i git_repository_head_detached p # git_repository_head_detached
i git_repository_odb p # git_repository_odb
v git_repository_set_index p # git_repository_set_index
i git_repository_index p # git_repository_index
i git_repository_detach_head v # git_repository_detach_head
i git_repository_set_head vv # git_repository_set_head
i git_repository_open_ext vpvv # git_repository_open_ext
v git_repository_free p # git_repository_free
i git_repository_state p # git_repository_state
v git_repository_set_odb p # git_repository_set_odb
i git_repository_is_empty p # git_repository_is_empty
i git_repository_open p # git_repository_open
v git_repository_set_refdb pv # git_repository_set_refdb
v git_repository_set_config p # git_repository_set_config
i git_repository_head_orphan p # git_repository_head_orphan
i git_repository_discover vvvvv # git_repository_discover
i git_repository_merge_cleanup p # git_repository_merge_cleanup
i git_repository_mergehead_foreach pvv # git_repository_mergehead_foreach
i git_repository_init vpv # git_repository_init
i git_repository_message_remove p # git_repository_message_remove
i git_repository_refdb v # git_repository_refdb
i git_repository_head p # git_repository_head
i git_repository_set_head_detached vv # git_repository_set_head_detached
i git_repository_fetchhead_foreach pvv # git_repository_fetchhead_foreach
i git_repository_config p # git_repository_config
p git_repository_path p # git_repository_path
i git_repository_set_workdir pvv # git_repository_set_workdir
i git_repository_message p # git_repository_message
p git_repository_workdir p # git_repository_workdir
i git_repository_is_bare p # git_repository_is_bare
i git_repository_wrap_odb p # git_repository_wrap_odb
i git_repository_init_ext vvv # git_repository_init_ext
i git_repository_hashfile vppvv # git_repository_hashfile
i git_reset pvv # git_reset
i git_reset_default pvv # git_reset_default
i git_revparse_single p # git_revparse_single
i git_revparse vpv # git_revparse
i git_revwalk_push_range p # git_revwalk_push_range
v git_revwalk_reset p # git_revwalk_reset
i git_revwalk_push_glob p # git_revwalk_push_glob
i git_revwalk_hide_ref p # git_revwalk_hide_ref
i git_revwalk_new p # git_revwalk_new
i git_revwalk_hide_head p # git_revwalk_hide_head
i git_revwalk_push p # git_revwalk_push
i git_revwalk_push_head p # git_revwalk_push_head
i git_revwalk_hide_glob p # git_revwalk_hide_glob
i git_revwalk_push_ref p # git_revwalk_push_ref
i git_revwalk_next p # git_revwalk_next
p git_revwalk_repository p # git_revwalk_repository
v git_revwalk_sorting p # git_revwalk_sorting
i git_revwalk_hide p # git_revwalk_hide
v git_revwalk_free p # git_revwalk_free
v git_signature_free p # git_signature_free
p git_signature_dup v # git_signature_dup
i git_signature_now p # git_signature_now
i git_signature_new p # git_signature_new
i git_stash_foreach pvv # git_stash_foreach
i git_stash_save vpvvv # git_stash_save
i git_stash_drop pv # git_stash_drop
i git_status_file vpp # git_status_file
i git_status_foreach pvv # git_status_foreach
i git_status_foreach_ext pvvv # git_status_foreach_ext
i git_status_should_ignore vpp # git_status_should_ignore
i git_strarray_copy p # git_strarray_copy
v git_strarray_free p # git_strarray_free
p git_submodule_url v # git_submodule_url
i git_submodule_lookup vpv # git_submodule_lookup
i git_submodule_foreach pvvvv # git_submodule_foreach
p git_submodule_path v # git_submodule_path
i git_submodule_status vv # git_submodule_status
v git_submodule_set_update vv # git_submodule_set_update
p git_submodule_index_id v # git_submodule_index_id
v git_submodule_set_ignore vv # git_submodule_set_ignore
i git_submodule_set_url v # git_submodule_set_url
p git_submodule_owner v # git_submodule_owner
i git_submodule_location vv # git_submodule_location
p git_submodule_head_id v # git_submodule_head_id
p git_submodule_wd_id v # git_submodule_wd_id
i git_submodule_add_to_index vv # git_submodule_add_to_index
i git_submodule_fetch_recurse_submodules v # git_submodule_fetch_recurse_submodules
p git_submodule_name v # git_submodule_name
i git_submodule_reload_all p # git_submodule_reload_all
v git_submodule_ignore v # git_submodule_ignore
v git_submodule_update v # git_submodule_update
i git_submodule_reload v # git_submodule_reload
i git_submodule_save v # git_submodule_save
i git_submodule_init v # git_submodule_init
i git_submodule_add_finalize v # git_submodule_add_finalize
i git_submodule_sync v # git_submodule_sync
i git_submodule_set_fetch_recurse_submodules vv # git_submodule_set_fetch_recurse_submodules
i git_submodule_add_setup vpvpv # git_submodule_add_setup
i git_submodule_open vv # git_submodule_open
i git_tag_target p # git_tag_target
p git_tag_id v # git_tag_id
p git_tag_name v # git_tag_name
i git_tag_foreach pvv # git_tag_foreach
i git_tag_list vp # git_tag_list
p git_tag_target_type v # git_tag_target_type
i git_tag_list_match vvp # git_tag_list_match
i git_tag_create_lightweight ppvvv # git_tag_create_lightweight
i git_tag_delete pv # git_tag_delete
p git_tag_message v # git_tag_message
p git_tag_target_id v # git_tag_target_id
p git_tag_tagger v # git_tag_tagger
i git_tag_create_frombuffer ppvv # git_tag_create_frombuffer
i git_tag_create ppvvvvv # git_tag_create
i git_tag_peel vv # git_tag_peel
i git_threads_init v # git_threads_init
v git_threads_shutdown v # git_threads_shutdown
i git_trace_set v # git_trace_set
i git_cred_userpass_plaintext_new vvv # git_cred_userpass_plaintext_new
i git_transport_smart vvv # git_transport_smart
i git_smart_subtransport_http vv # git_smart_subtransport_http
i git_smart_subtransport_git vv # git_smart_subtransport_git
i git_transport_dummy vvv # git_transport_dummy
i git_transport_local vvv # git_transport_local
i git_transport_new p # git_transport_new
v git_tree_entry_free p # git_tree_entry_free
p git_tree_id v # git_tree_id
i git_treebuilder_insert vvvvv # git_treebuilder_insert
i git_treebuilder_entrycount p # git_treebuilder_entrycount
v git_treebuilder_clear p # git_treebuilder_clear
i git_tree_entry_to_object vpv # git_tree_entry_to_object
p git_tree_entry_id v # git_tree_entry_id
p git_tree_entry_byindex vv # git_tree_entry_byindex
p git_tree_entry_byoid vv # git_tree_entry_byoid
i git_tree_entry_bypath vvp # git_tree_entry_bypath
v git_treebuilder_filter vvv # git_treebuilder_filter
i git_treebuilder_write vpv # git_treebuilder_write
i git_treebuilder_create vv # git_treebuilder_create
v git_tree_entry_dup v # git_tree_entry_dup
p git_tree_entry_byname vv # git_tree_entry_byname
i git_treebuilder_remove vv # git_treebuilder_remove
p git_tree_entry_type v # git_tree_entry_type
v git_tree_entry_filemode v # git_tree_entry_filemode
p git_tree_owner v # git_tree_owner
i git_tree_entrycount v # git_tree_entrycount
v git_treebuilder_free p # git_treebuilder_free
p git_treebuilder_get vv # git_treebuilder_get
p git_tree_entry_name v # git_tree_entry_name
i git_tree_walk vvvv # git_tree_walk
i git_tree_entry_cmp v # git_tree_entry_cmp
